<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: .net, | ToalhaTech]]></title>
  <link href="http://toalhatech.github.io/toalhatech/blog/categories/dot-net/atom.xml" rel="self"/>
  <link href="http://toalhatech.github.io/toalhatech/"/>
  <updated>2013-11-20T23:54:50-02:00</updated>
  <id>http://toalhatech.github.io/toalhatech/</id>
  <author>
    <name><![CDATA[Equipe ToalhaTech]]></name>
    <email><![CDATA[contato@toalhatech.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DNAD 2013 - 2o Dia]]></title>
    <link href="http://toalhatech.github.io/toalhatech/blog/2013/09/11/dnad-2013-2o-dia/"/>
    <updated>2013-09-11T23:14:00-03:00</updated>
    <id>http://toalhatech.github.io/toalhatech/blog/2013/09/11/dnad-2013-2o-dia</id>
    <content type="html"><![CDATA[<p>Depois de um <a href="http://toalhatech.com/blog/2013/08/21/dnad-2013-1o-dia/">1o dia inspirador</a>, o 2o dia do DNAD também estava bem promissor. Infelizmente, entretanto, duas das palestras que eu mais gostaria de ver (sobre Tsuru, da Flavia Missi e Quando Parei de Usar Padrões, do Vinicius Quaiato) foram canceladas por motivos de força maior. Uma pena, tanto pra audiência quanto pros palestrantes. Por causa destes contratempos, a ordem das palestras não seguiu exatamente a programação, e o <a href="http://elemarjr.net/">Elemar Jr</a> abriu a sequência &ndash; mais uma<!-- more --> vez, de forma irrepreensível.</p>

<h4>CQRS aplicado para construção de aplicações de alto desempenho usando Windows Azure</h4>

<p>Nessa palestra o Elemar voltou a suas origens palestrísticas, com um foco mais arquitetural. Especificamente, ele apresentou um case de CQRS, sobre HTTP, com alto grau de processamento, utilizando Windows Azure. A primeira coisa que me surpreendeu nessa palestra foi o uso de cloud pra fazer processamento distribuído: o tipo de coisa que parece meio óbvia depois que você conhece um case assim, mas que eu jamais teria considerado sozinha.  No caso do Elemar, o serviço (que atende pela alcunha de Mooble) tinha por objetivo atender às demandas de 95% (!) do setor moveleiro nacional, com catálogos gigantescos, e necessidades sofisticadas de apresentação destes catálogos (pense em visualizações tridimensionais de objetos &ndash; tanto individualmente quanto num projeto de design de interiores). Por sinal, a renderização tridimensional dos objetos contou com uma &ldquo;pegadinha&rdquo; bem legal: no preview, o 3D é, na verdade, um grande sprite formado por dezenas de imagens, cada uma em um ângulo diferente!</p>

<p>Finalmente, a escolha por CQRS foi muito bem justificada, especialmente quando explicadas as necessidades de comandos (uploads de novos itens, por exemplo) e consultas. Todo processo de upload de um novo item nos catálogos (ou seja, o &lsquo;C&rsquo; do CQRS) envolve atualizar os blobs dos itens binários (preview/modelo 3D, etc), as meta-informações dos objetos (em um banco NoSQL &ndash; MongoDB, se não me engano), e o sistema de indexação (Lucene). Essas operações são enfileiradas e processadas por workers no Windows Azure. As consultas, por sua vez, trafegam como JSON, sobre HTTP, com alta disponibilidade (3Mb/s, pelo que anotei!). Evidentemente, para melhor entender a arquitetura apresentada pelo Elemar, vale conferir sua <a href="http://elemarjr.net/tag/cqrs/">série de posts sobre CQRS</a>.</p>

<h4>Dynamic Language Design for the JVM</h4>

<p>Eu sou particularmente fascinada por linguagens de programação e compiladores. Não por acaso, estava bastante empolgada com a palestra do <a href="http://blog.qmx.me/">Douglas Campos</a> (vulgo <a href="https://twitter.com/qmx">@qmx</a>), prolífico commiter de JRuby, além de desenvolvedor na RedHat. Logo no início, Douglas recomendou um dos meus livros favoritos da época da faculdade &ndash; o querido/temido <a href="http://www.amazon.com/Compilers-Principles-Techniques-Tools-Edition/dp/0321486811">livro do Dragão</a>! Apenas boas coisas podem suceder uma recomendação dessas, e, de fato, a palestra foi um prato cheio pros aficionados por linguagens/compiladores.</p>

<p>O Douglas começou falando um pouco sobre a JVM (&ldquo;uma obra de arte&rdquo;, ele disse). Uma curiosidade interessante, pra quem gosta de números: a JVM é fruto de mais de 10.000 horas de trabalho de top engineers (and counting)! O foco da palestra foram os problemas encontrados (e suas respectivas soluções) durante a implementação de JRuby &ndash; uma implementação completa de Ruby rodando sobre a JVM. A ideia já começa problemática quando consideramos que Ruby é uma linguagem dinâmica e a JVM é estaticamente tipada; de fato, quase que a totalidade dos problemas mostrados pelo Douglas tinham como causa este mismatch. Um dos exemplos que ele mostrou referia-se à tipagem de números: Ruby deixa que o tipo de uma variável mude dinamicamente em caso de overflows aritméticos. Já na JVM, existem diferentes funções aritméticas para os diferentes tipos existentes (<code>iadd</code>, por exemplo, é a função nativa para soma de <em>inteiros</em>. Qual seria a função nativa para soma de <em>objetos</em> que se comportam como inteiros? Rá!).</p>

<p>Uma das coisas que mais me marcaram foi a mensagem de que otimizações são vitais para compiladores de linguagens dinâmicas: quando os tipos mudam em tempo de execução, uma série de otimizações que os compiladores de linguagens estaticamente tipadas fazem são inviáveis. Alguns exemplos são alocação de memória e resolução de métodos virtuais.</p>

<p>Ah, como curiosidade adicional, o Douglas recomendou um site muito divertido pra quem quer construir uma CPU do zero (e assim entender como as coisas funcionam): o <a href="http://www.nand2tetris.org/">NAND2Tetris</a>. Confesso que tenho um pequeno trauma de <a href="http://www.cpdee.ufmg.br/~l.errico/introvhdl.pdf">VHDL (Linguagem de Descrição de Hardware VHSIC)</a> desde a faculdade, mas talvez seja uma boa oportunidade de curá-lo. Não encontrei os slides dessa palestra especificamente, mas o Douglas aprofundou o assunto no QCon SP 2013, <a href="http://soapbox.qmx.me/p/2013/qconsp/hosting-dynlangapps-jvm/#/">e disponibilizou a apresentação</a>.</p>

<p>O Elemar Jr também se animou com a palestra e resolveu mexer com o NAND2Tetris, registrando suas impressões em uma <a href="http://elemarjr.net/?s=NAND2Tetris">série de posts</a>.</p>

<h4>Survey sobre Programação Concorrente com .NET</h4>

<p>Eu estava bastante interessada na palestra do <a href="http://fabiogaluppo.wordpress.com/">Fábio Galuppo</a> &ndash; MVP de C++ há UMA DÉCADA (!) &ndash; mas pra meu azar surgiu um imprevisto e tive que sair correndo do DNAD. Fica como prêmio consolação <a href="https://github.com/fabiogaluppo/samples/tree/master/events/dnad2013/_Parallel">o código fonte</a> mostrado durante a palestra.</p>

<h4>Painel de Programação Funcional</h4>

<p>Quando voltei para o DNAD, o Painel de Programação Funcional &ndash; último do dia &ndash; já estava quase terminando. Compuseram a mesa o Elemar Jr, o Fábio Galuppo, o Pedro Teixeira e o Rodrigo Vidal. Infelizmente não cheguei a tempo de ver o desenvolvimento do tema desde o início (4 visões diferentes do que é programação funcional), mas sim de presenciar uma das melhores explicações de como o paradigma funcional representa o mundo melhor que o imperativo. Numa observação (muito pertinente, por sinal) da audiência, foi dito que &ldquo;o mundo era representado por uma sequência de pequenos passos bem definidos (imperativo)&rdquo;. O Elemar prontamente discordou, e explicou seu ponto de vista a partir de um diálogo que teve com a mãe, tentando (em vão) explicar o que ele fazia no trabalho.</p>

<blockquote><p>- Mãe, pense no procedimento necessário pra limpar um bebê.<br/>
- Sim, tirar a roupa, lavar e secar.<br/>
- Bem&hellip; na verdade, você primeiro pega o bebê; depois levanta a camisa; depois tira o short; depois tira a fralda; aí você pega a água e&hellip;<br/>
- Filho; eu só tiro a roupa, lavo e seco.</p></blockquote>

<p>Eis que &ldquo;tirar a roupa&rdquo;, &ldquo;lavar&rdquo; e &ldquo;secar&rdquo; o bebê são abstrações funcionais do que a mãe do Elemar faz. Taí a explicação funcional do procedimento. E taí a descrição de como o mundo é representado desta forma.</p>

<p>A imagem abaixo ilustra a agenda do painel e exemplifica estas abstrações em F#.</p>

<p><img src="https://pbs.twimg.com/media/BQyDiG0CMAEalJA.jpg:large" alt="Alt agenda do painel: o que é, pra que serve, como aprender, como aprendemos e benefícios" /></p>

<p>De forma geral, o saldo do DNAD2013 foi bem positivo. Na minha opinião, esta edição foi imbatível quanto à qualidade das apresentações, dos palestrantes e até dos brindes (!). A organização do evento também foi bastante competente ao tornar imperceptíveis alguns contratempos que poderiam ter sido desastrosos (como o cancelamento de duas palestras, no mesmo dia). Que venha agora 2014, com o super desafio de superar o DNAD 2013 :)</p>
]]></content>
  </entry>
  
</feed>
